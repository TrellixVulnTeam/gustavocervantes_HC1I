// // variables 
// $width:100%;
// $height:30vh;

// $lang:en;

html {
    font-size: 100%;
    // cuando pones 62.5 hacer que se pueda poner de 10 en 10 los rem
    // 10px = 0.625 rem
}

header{
    background-color: #0B3954;
    // display: flex;
    // text-align: center;
    color: #D2E1FC;
    font-family: 'Roboto', sans-serif;
    
    font-weight: 400;


    h1{
        font-weight: 600;
        font-size: 2.5rem;
        font-style: $fontMain;
    }

    img{
        width: 2.4em;
        height: 2.4em;
    }
    
}

header img{
    width: 4em;
    height: 4em;
    margin-left: 0.5em;
    margin-top: 00.5em;
    margin-bottom: 00.5em;
}

header h1 {
    // que ocupe todo lo que no usa la imagen
    width: 100%;
    display: flex;
    justify-content: center;
    text-align: center;
    // margin-left: 10em;
    // margin-top: 1em;
    // margin-bottom: 1em;
    // se podría hacer con margin:auto
    // se podría acomodar con queries
    // se podría acomodar la letra con las queries
}

main{
    display: flex;
    padding: 0.1em;
    background-color: #0B3954;
    section{
        .videoMain{
            background-color: #0B3954;
        }
        
    }
    
}

#mainIndex{
    background-color: #0B3954;
}

// // #asideIndex{
// //     display: flex;
// //     padding: 0.1em;
// // }

// ver si va o no
.asideIndex{
    display: flex;
    justify-content: center;
}


// main{
//     display: flex;
//     flex-direction: row;
// }

.footerIndex{
    margin-top: 2em;
    height: 4em;
    width: 100%;
}

.footerIndex p{
    text-align: center;
    font-weight: 600;
    width: 100%;
    height: 4em;
}

nav{
    div{
        div{
            ul{
                li:hover{
                    cursor: pointer;
                    background-color: #0B3954;
                    border-radius: 0.5em;
                }
            }
        }
    }
}

.footerIndex{
    background-color: #0B3954;
    color: white;
    text-align: center;
    display: flex;
    height: 7em;
    p{
        margin-top: 1.5em;
        align-content: space-between;
        
    }
}

// .flexVideoAside{
//     display: flex;
//     flex-direction: row;
//     justify-content:space-between;
//     justify-items:flex-start;
//     overflow:visible;
//     // box-sizing:inherit;
//     align-items:flex-start;
//     width: 100%;
//     height: auto;
//     background-color: #038F7C;
//     text-align: center;
// }

.videoMain{
    display: flex;
//     flex-direction: row;
    align-items: center;
// para que siempre este centrado
    justify-content: center;

    // width: 35vw;  este wiidth no va mas       
    // div{
    //     align-items: center;
    //     padding: 2em;
    //     text-justify: auto;
    //     text-overflow: inherit;
        
    // }
   
}

.asideRight{
    display: flex;
    // flex-direction: row;
    // width: 55vw; no va, que se adapte a la columna 
    justify-content: center; 
    background-color: #038F7C;
    justify-content: center;
    align-items: center;
    
    

}

#npsIndex{
    background-color:#3C5B91;
    color: aliceblue;
}

.asideRight div{
    display: flex;
    padding: 4em;
    margin: 3em;
    background-color:#0B3954;
    // width: 12em;
    // justify-items:flex-start;
    align-items: center;
    justify-content:center;
    border-radius: 2em;
    width: 4em;
    height: 6em;
    text-align:center; 
    text-justify: word-spacing;
    color: #D2E1FC;
   
    
}

.imgnormalizada img {
    // iba width auto, hay que ver
    width: auto;
    height: 10em;
    max-height: 225px;
  }

// .backgroundColor{
//     background-color: yellow;
// }

// .navBlue{
//     background-color: blue;
// }

// // #alineaciondeTexto{
// //     text-align: center;
// //     text-overflow: inherit;
// //     width: 8em;
// //     height: 4em;
// // }

div.rotateAlpha:hover{
    transform: rotate(360deg);
    background-color:#0B3954 ;
    transition: transform 4s;
    cursor: pointer;
    width: 8em;
    height: 4em;
    margin-left: 4rem;
    margin-right: 4rem;
    border-radius: 1em;
        
}



.textColorh1{
    color: whitesmoke;
}


.btn-color{
	width: 1em;
    height: 2.5em;
    border: none;
    background:#0B3954 ;
    color: antiquewhite;
    display: flex;
    justify-content: center;
    align-content: center;
    // nesting
    &:hover{
        color: #038F7C;
        cursor: pointer;
    }
}

#btn-rounded{
    @extend .btn-color;
    // me traigo todo de la clase btn-more
    // es una especie de herencia de clase
    border-radius: 5px;
    
}

// //mixins
// // es como una función
// // hay que pensarlo como una acción que se va a repetir
// // todos los header con la misma paleta de colores
@mixin headerH ($w-100, $bg-color,$font-size) {
    width: $w-100;
    background-color: $bg-color;
    font-size: $font-size;
    padding: 2px;
}

// // estoy definiendo el mixing, es como un bucle

// // voy a llamar al mixing en estas clase

#headerA{
    @include headerH(100%, #0B3954, 1.4em)
}

h3{
    @include headerH(2em, 2em, darkviolet  )
}

// // extend: calcar una clase exactamente igual
// // con el mixing le definis los parámetros a la clase

// @mixin flex($justify,$align) {
//     display: flex;
//     justify-content: $justify;
//     align-items: $align;
// }

// // esto se podría poner en content y dejar solo a los mixin´s
// .box{
//     @include flex(center, center )
// }
// // le pido align-items y justify content center los dos con el mixin

// // map OK
$paleta:(
    'uno': #0B3954,
    'dos': #279EB0,
    'tres':#038F7C,
    'cuatro':#296AD9,
    'cinco': #D2E1FC,
    'seis': #3C5B91,
    
);



.asideRight{
    background-color: map-get($paleta, $key:'tres');
}


#navIndex{
    background-color: map-get($paleta, $key:'seis');
}

#navNosotros{
    background-color: map-get($paleta, $key:'seis');
}

#bg-mapNav{
    background-color: map-get($paleta, $key:'seis');
}

#botonera{
    background-color: map-get($paleta, $key:'seis');
}

.grid{
    display: grid;
    width: 99%;   
    // grid-template-columns: repeat(2, 1fr);
    // comentarlo, ver como se adapta sin el grid template rows por el contenido y 
    // desp volver a probar
    // grid-template-rows: 15vw 10vw 40vw  15vw 10vw 10vw;
    grid-template-areas: "header header"
                        "nav nav" 
                        "main aside"
                        "nps nps"
                        "carrusel carrusel"
                        "footer footer";

}

#headerA{
    grid-area: header;
}

#navIndex{
    grid-area: nav;
}

#mainIndex{
    grid-area: main;
}

#asideIndex{
    grid-area: aside;
}

#npsIndex{
    grid-area: nps;
}

#carouselIndex{
    grid-area: carrusel;
    width: 100%;
}

#footerIndex{
    grid-area: footer;
}



// empezar al reves, seguir con la que empieza a colapsar el contenido
// 700 px aprox tablet - 400 px para abajo celu

@media (max-width: 1200px) {
    
    .grid{
        grid-template-columns: repeat(2, 1fr);
        grid-template-areas: "header header"
        "nav nav" 
        "main aside"
        "nps nps"
        "carrusel carrusel"
        "footer footer";
    }



#headerA{
grid-area: header;
}

#navIndex{
grid-area: nav;
}

#mainIndex{
grid-area: main;
}

#asideIndex{
grid-area: aside;
}

#npsIndex{
grid-area: nps;
}

#carouselIndex{
grid-area: carrusel;
width: 100%;
}

#footerIndex{
grid-area: footer;
}

}

@media (max-width: 1024px) {
    
    .grid{
        grid-template-columns: repeat(1, 1fr);
        grid-template-areas: "header"
        "nav" 
        "main"
        "aside" 
        "nps"
        "carrusel"
        "footer";

    }

#headerA{
grid-area: header;
}

#navIndex{
grid-area: nav;
}

#mainIndex{
grid-area: main;
}

#asideIndex{
grid-area: aside;
}

#npsIndex{
grid-area: nps;
}

#carouselIndex{
grid-area: carrusel;
}

#footerIndex{
grid-area: footer;
        }
}

@media (max-width: 768px) {
    .grid{
        grid-template-columns: repeat(1, 1fr);
        grid-template-areas: "header"
                            "nav" 
                            "main"
                            "aside" 
                            "nps"
                            "carrusel"
                             "footer";

}

#headerA{
grid-area: header;
}

#navIndex{
grid-area: nav;
}

#mainIndex{
grid-area: main;
}

#asideIndex{
grid-area: aside;
}

#npsIndex{
grid-area: nps;
}

#carouselIndex{
grid-area: carrusel;
width: 100%;
}
#footerIndex{
    grid-area: footer;
    }

}
    
    // #headerA{
        
    //     grid-template-columns: repeat(3, 1fr);
    //     grid-template-rows: 25vw 65vwpx 10vw;
    //     grid-template-areas: "header header header" "content1 content2 content3" "header1 header1 header1";
    
    //     #imgHeaderA{
    //         grid-area: content1;
    //     }
    //     #h1Index{
    //         grid-area: content2;
    //     }
    // }


    // #headerA{
        
    //     grid-template-columns: repeat(3, 1fr);
    //     grid-template-rows: 25vw 65vwpx 10vw;
    //     grid-template-areas: "header header header" "content1 content2 content3" "header1 header1 header1";
    
    //     #imgHeaderA{
    //         grid-area: content1;
    //     }
    //     #h1Index{
    //         grid-area: content2;
    //     }
    // }


    // cambia el grid template areas aside - main en este caso
    // cambia columnas a una sola en dispositivos mobile


    // #headerA{
    //     grid-template-columns: repeat(3, 1fr);
    //     grid-template-rows: 25vw 65vwpx 10vw;
    //     grid-template-areas: "header header header" "content1 content2 content3" "header1 header1 header1";
    // }
    // #imgHeaderA{
    //     grid-area: content1;
    // }
    // #h1Index{
    //     grid-area: content1;
    // }

    // #headerA{
    //     grid-template-columns: repeat(3, 1fr);
    //     grid-template-rows: 25vw 65vwpx 10vw;
    //     grid-template-areas: "header header header" "content1 content2 content3" "header1 header1 header1";
    
        
    // }
    // #imgHeaderA{
    //     grid-area: content1;
    // }
    // #h1Index{
    //     grid-area: content2;

@media (max-width: 600px){
    // si queres que ocupen lo mismo o se adapten al contenido
    // , no hace falta que se adapten a grid template columns y rows
    .grid {
        grid-template-columns: repeat(1, 1fr);
        grid-template-areas: "header "
                            "nav " 
                            "main"
                            "aside" 
                            "nps"
                            "carrusel"
                            "footer";
    }
#headerA{
    grid-area: header;
         }
                                                                            
#navIndex{
    grid-area: nav;
        }
                                                                            
#mainIndex{
    grid-area:main;
        }
                                                                            
#asideIndex{
    grid-area: aside;
        }
                                                                            
#npsIndex{
    grid-area: nps;
        }
                                                                            
#carouselIndex{
    grid-area: carrusel;
        }
#footerIndex{
    grid-area: footer;
            }
                                                     
                                                    
}

@media (max-width: 280px) {
    .grid{
        grid-template-columns: repeat(1, 1fr);
        grid-template-areas: "header"
                        "nav" 
                        "main"
                        "aside" 
                        "nps"
                        "carrusel"
                        "footer";
    }
#headerA{
    grid-area: header;
        }
                                                
#navIndex{
    grid-area: nav;
        }
                                                
#mainIndex{
    grid-area: main;
        }
                                                
#asideIndex{
    grid-area: aside;
        }
                                                
#npsIndex{
    grid-area: nps;
        }
                                                
#carouselIndex{
    grid-area: carrusel;
        }
#footerIndex{
    grid-area: footer;
        
    }                      
                        
#headerA{
    grid-area: header;
        }
                        
#navIndex{
    grid-area: nav;
        }
                        
#mainIndex{
    grid-area: main;
        }
                        
#asideIndex{
    grid-area: aside;
        }
                        
#npsIndex{
    grid-area: nps;
        }
                        
#carouselIndex{
    grid-area: carrusel;
        }
#footerIndex{
    grid-area: footer;
             }
}